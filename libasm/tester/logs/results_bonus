[01;33mtesting ft_list_push_front[0m

created list: first -> second -> third -> romeo -> alpha -> romeo -> null

[01;33mtesting ft_list_size[0m

[01mlist size:	6

[0m[01;33mtesting ft_list_sort

[0msorted list:	alpha -> first -> romeo -> romeo -> second -> third -> null

[01;33mtesting ft_list_remove_if[0m

removing 'first' from the list

after:	alpha -> romeo -> romeo -> second -> third -> null

[01mlist size:	5
[0m
removing '' from the list

after:	alpha -> romeo -> romeo -> second -> third -> null

[01mlist size:	5
[0m
removing 'romeo' from the list

after:	alpha -> second -> third -> null

[01mlist size:	3
[0m
removing 'test' from an empty list

[01mlist size:	0
[0m[01;33m
testing ft_atoi_base

[0mtesting withdecimal: string '123' in base '0123456789'

returns 	 123

should return 	 123
comparing results:					[1;32mOK [0m

testing with' \t-+-+123- ': string ' 	-+-+123- ' in base '0123456789'

returns 	 123

should return 	 123
comparing results:					[1;32mOK [0m

testing with' \t-+-+-123- ': string ' 	-+-+-123- ' in base '0123456789'

returns 	 -123

should return 	 -123
comparing results:					[1;32mOK [0m

testing with' -\t-+-+-123- ': string ' -	-+-+-123- ' in base '0123456789'

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

testing withint max: string '2147483647' in base '0123456789'

returns 	 2147483647

should return 	 2147483647
comparing results:					[1;32mOK [0m

testing withint max + 1: string '2147483648' in base '0123456789'

returns 	 -2147483648

should return 	 -2147483648
comparing results:					[1;32mOK [0m

testing withint min: string '-2147483648' in base '0123456789'

returns 	 -2147483648

should return 	 -2147483648
comparing results:					[1;32mOK [0m

testing withint min - 1: string '-2147483649' in base '0123456789'

returns 	 2147483647

should return 	 2147483647
comparing results:					[1;32mOK [0m

testing withbinary: string '123' in base '01'

returns 	 1

should return 	 1
comparing results:					[1;32mOK [0m

testing withbinary: string '10101' in base '01'

returns 	 21

should return 	 21
comparing results:					[1;32mOK [0m

testing withhexadecimal: string 'ff' in base '0123456789abcdef'

returns 	 255

should return 	 255
comparing results:					[1;32mOK [0m

testing withempty string: string '' in base '0123456789'

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

testing withno chars from base in string: string 'test' in base '0123456789'

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

testing withstring equals \0: string '' in base '0123456789'

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

testing withbase equals \0: string '123' in base ''

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

testing withstring and base equal \0: string '' in base ''

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

testing withbase with a dublicate char: string '123' in base '01234567890'

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

testing withbase with a space: string '123' in base '01234 56789'

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

testing withbase with a sign: string '123' in base '01234-56789'

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

testing withan empty base: string '123' in base ''

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

testing withbase with a size of 1: string '1' in base '1'

returns 	 0

should return 	 0
comparing results:					[1;32mOK [0m

